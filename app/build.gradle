apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion versions.targetSdk
    defaultConfig {
        applicationId "hu.sztomek.pizzapp"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // GENERIC
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    kapt "com.android.tools.build.jetifier:jetifier-core:${versions.jetifier}"

    // UI
    implementation "androidx.appcompat:appcompat:${versions.androidx}"
    implementation "androidx.cardview:cardview:${versions.cardview}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "com.google.android.material:material:${versions.material}"

    // ARCH
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    kapt "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}"

    // NETWORK
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"

    // DI
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    // ORM
    implementation "io.objectbox:objectbox-android:${versions.objectbox}"
    implementation "io.objectbox:objectbox-kotlin:${versions.objectbox}"
    implementation "io.objectbox:objectbox-rxjava:${versions.objectbox}"
    kapt "io.objectbox:objectbox-processor:${versions.objectbox}"

    // IMAGE
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    // LOGS
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    // REACTIVE
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxjava_android}"

    // MAP
    implementation "com.google.android.gms:play-services-maps:${versions.gmaps}"

    // UTIL
    implementation "net.danlew:android.joda:${versions.joda}"

    // TESTS
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "androidx.arch.core:core-testing:${versions.androidx_testing}"
    androidTestImplementation "androidx.test:runner:${versions.runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "androidx.test:rules:${versions.androidx_rules}"
    androidTestUtil "androidx.test:orchestrator:${versions.runner}"
}
